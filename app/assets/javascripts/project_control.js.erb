/** Project type keys */
var ProjectTypes = {
  'new' : { key : 0, items : [], count : 0 },
  'active' : { key : 1, items : [], count : 0 },
  'success' : { key : 2, items : [], count : 0 },
  'failed' : { key : 3, items : [], count : 0 },
  'closed' : { key : 4, items : [], count : 0 }
};

/** Controller for new project form */
var CreateProjectController = function($scope, Project) {
  $scope.project = new Project();
  $scope.hasErrors = false;
  $scope.errors = {};
  $scope.success = false;
  $scope.public = true;

  /* Default values */
  $scope.project.objective = "Idea";
  $scope.project.name = "Project name";
  $scope.project.desc = "Project description";

  /** Create the project or list errors */
  $scope.create = function() {
    $scope.project.private = !$scope.public;
    $scope.project.$create(function(data) {
      $scope.success = true;
      $scope.hasErrors = false;
    }, function(data) {
      var data = appErrorsAsArray(data);
      $scope.errors = data;
      $scope.hasErrors = data.length;
    });
  };
}

CreateProjectController.$inject = ['$scope', 'Project'];

/** Controller for list project form */
var ListProjectController = function($scope, Project) {
  $scope.nav = function(url) { document.location = url; }
  $scope.projects = ProjectTypes;

  Project.query(function(data) {
    for (var d in data) {

      /* update urls for each item */
      data[d].viewUrl = ListProjectControllerData.baseViewUrl + "/" + data[d].id;
      data[d].editUrl = ListProjectControllerData.baseEditUrl + "/" + data[d].id;
      data[d].deleteUrl = ListProjectControllerData.baseDeleteUrl + "/" + data[d].id;

      /* split into status batches */
      for (var t in $scope.projects) {
        if (data[d].status == $scope.projects[t].key) {
          data[d].status = t;
          $scope.projects[t].items.push(data[d]);
        }
      }
    }

    /* update project counts */
    for (var t in $scope.projects) {
      $scope.projects[t].count = $scope.projects[t].items.length;
    }
  });
}

ListProjectController.$inject = ['$scope', 'Project'];

/** Controller for view project form */
var ViewProjectController = function($scope, Project) {
  $scope.valid = true;
  $scope.project = new Project()
  Project.get({id:ViewProjectControllerData.id}, function(data) {
    for (var t in ProjectTypes) {
      if (data.status == ProjectTypes[t].key) {
        data.status = t;
        break;
      }
    }
    $scope.project = data;
  }, function() {
    $scope.valid = false;
  });
}

ViewProjectController.$inject = ['$scope', 'Project'];

/** Controller for view project form */
var DeleteProjectController = function($scope, Project) {

  /* model */
  $scope.error = false;
  $scope.done = false;
  $scope.valid = true;

  /** Remove the object after all */
  $scope.remove = function() {
    $scope.target.$remove(function(data) {
      $scope.done = true;
    }, function(data) {
      $scope.error = true;
    });
  };

  /** Load the named target */
  Project.get({id:DeleteProjectControllerData.id}, function(data) {
    $scope.target = data;
  }, function() {
    $scope.valid = false;
  });
}

DeleteProjectController.$inject = ['$scope', 'Project'];

/** Controller for edit project form */
var EditProjectController = function($scope, Project, PledgeType, Goal) {

  /** Reset the 'add pledge type' form */
  $scope.resetPledgeType = function() {
    $scope.pledgeType = new PledgeType();
    $scope.pledgeTypeSuccess = false;
    $scope.pledgeTypeHasErrors = false;
    $scope.pledgeTypeErrors = [];
  }

  /** Reset the 'add goal' form */
  $scope.resetGoal = function() {
    $scope.goal = new Goal();
    $scope.goalSuccess = false;
    $scope.goalHasErrors = false;
    $scope.goalErrors = [];
  }

  /** Add a pledge type */
  $scope.addPledgeType = function() {
    $scope.pledgeType.project_id = $scope.project.id;
    $scope.pledgeType.$create(function(data) {
      $scope.pledgeTypeHasErrors = false;
      $scope.pledgeTypes.push(data);
      $scope.resetPledgeType();
      $scope.pledgeTypeSuccess = true;
    }, function(data) {
      var data = appErrorsAsArray(data);
      $scope.pledgeTypeErrors = data;
      $scope.pledgeTypeHasErrors = data.length;
    });
  };

  /** Add a goal */
  $scope.addGoal = function() {
    $scope.goal.project_id = $scope.project.id;
    $scope.goal.$create(function(data) {
      $scope.goalHasErrors = false;
      $scope.goals.push(data);
      $scope.resetPledgeType();
      $scope.goalSuccess = true;
    }, function(data) {
      var data = appErrorsAsArray(data);
      $scope.goalErrors = data;
      $scope.goalHasErrors = data.length;
    });
  };

  /** Hide the success message */
  $scope.hidePledgeTypeSuccess = function() {
    $scope.pledgeTypeSuccess = false;
  }

  /** Hide the success message */
  $scope.hideGoalSuccess = function() {
    $scope.goalSuccess = false;
  }

  $scope.makeProjectLive = function() {
    if ($scope.projectIsNew) {
      $scope.project.status = 1;
      $scope.project.$save(function(data) {
        for (var t in ProjectTypes) {
          if (data.status == ProjectTypes[t].key) {
            data.status = t;
            break;
          }
        }
        $scope.project = data;
        $scope.projectIsNew = false;
      });
    }
  }

  /* Initial state */
  $scope.valid = true;
  $scope.project = new Project()
  $scope.resetPledgeType();
  $scope.resetGoal();
  $scope.pledgeTypes = [];
  $scope.pledgeTypesCount = 0;
  $scope.goals = [];
  $scope.goalsCount = 0;
  $scope.projectIsNew = false;

  /* Load basic data set */
  Project.get({id:EditProjectControllerData.id}, function(data) {
    for (var t in ProjectTypes) {
      if (data.status == ProjectTypes[t].key) {
        data.status = t;
        break;
      }
    }
    $scope.project = data;
    $scope.projectIsNew = data.status == 'new';

    /* Fetch goals */
    Goal.query({project_id:$scope.project.id}, function(data) {
      $scope.goals = data;
      $scope.goalsCount = data.length;
    }, function(data) {
      $scope.goals = []
      $scope.goalsCount = 0;
      $scope.goalsFetchError = data;
    });

    /* Fetch pledge types */
    PledgeType.pquery({project_id:$scope.project.id}, function(data) {
      $scope.pledgeTypes = data;
      $scope.pledgeTypesCount = data.length;
    }, function(data) {
      $scope.pledgeTypes = []
      $scope.pledgeTypesCount = 0;
      $scope.pledgeTypesFetchError = data;
    });

  }, function() {
    $scope.valid = false;
  });
}

EditProjectController.$inject = ['$scope', 'Project', 'PledgeType', 'Goal'];
